name: CRDA scan Node Example
on: [ push, workflow_dispatch ]
jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ "macos-latest", "windows-latest", "ubuntu-20.04" ]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    name: Analyse Node project
    steps:

      - name: Checkout project
        uses: actions/checkout@v2
        with:
          repository: jduimovich/crda-sarif-poc

      - name: Checkout action
        uses: actions/checkout@v2
        with:
          path: crda

      - name: Install npm
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install CRDA
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          source: github
          github_pat: ${{ github.token }}
          crda: "latest"

      - name: CRDA Scan
        id: scan
        uses: ./crda
        with:
          manifest_path: package.json
          crda_key: ${{ secrets.CRDA_KEY }}
          # snyk_token: ${{ secrets.SNYK_TOKEN }}
          fail_on: never
          upload_sarif: false

      - name: Print JSON analysis report
        if: ${{ always() && steps.scan.outputs.crda_report_json }}
        run: cat ${{ steps.scan.outputs.crda_report_json }}

      - name: Print SARIF analysis report
        if: ${{ always() && steps.scan.outputs.crda_report_sarif }}
        run: cat ${{ steps.scan.outputs.crda_report_sarif }}

      - name: Print Report Link
        run: echo ${{ steps.scan.outputs.report_link }}

      - name: Save intermediate files
        run: |
          mkdir -p uploads
          mv ${{ steps.scan.outputs.crda_report_json }} uploads
          mv ${{ steps.scan.outputs.crda_report_sarif }} uploads

      - name: Upload merged Results
        uses: actions/upload-artifact@v2
        with:
          name: scan_result_js.zip
          path: ./uploads
