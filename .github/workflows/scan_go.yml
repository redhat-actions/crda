name: CRDA scan Golang Example
on:
  push:
  workflow_dispatch:
  pull_request_target:
    types: [assigned, opened, synchronize, reopened, labeled, edited]
jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ "macos-latest", "windows-latest", "ubuntu-20.04" ]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    name: Analyse Golang project
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          repository: rafiu007/golang-vuln-demo

      - name: Checkout action
        uses: actions/checkout@v2
        with:
          path: crda

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '^1.13.1'

      - run: |
          go mod vendor

      - name: Install CRDA
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          source: github
          github_pat: ${{ github.token }}
          crda: "latest"

      - name: CRDA Scan
        id: scan
        uses: ./crda
        with:
          manifest_file_path: go.mod
          # crda_key: ${{ secrets.CRDA_KEY }}
          analysis_report_file_name: go
          snyk_token: ${{ secrets.SNYK_TOKEN }}
          consent_telemetry: true
          fail_on_vulnerability: "false"
          upload_sarif: false

      - name: Print Analysis Report
        if: ${{ always() && steps.scan.outputs.crda_report_json }}
        run: cat ${{ steps.scan.outputs.crda_report_json }}

      - name: Print Sarif
        if: ${{ always() && steps.scan.outputs.crda_report_sarif }}
        run: cat ${{ steps.scan.outputs.crda_report_sarif }}

      - name: Print Report Link
        run: echo ${{ steps.scan.outputs.report_link }}

      # - name: Upload result to GitHub Code Scanning
      #   if: ${{ steps.scan.outputs.crda_report_sarif }}
      #   uses: github/codeql-action/upload-sarif@v1
      #   with:
      #     sarif_file: ${{ steps.scan.outputs.crda_report_sarif }}

      - name: Save intermediate files
        run: |
          mkdir -p uploads
          mv ${{ steps.scan.outputs.crda_report_json }} uploads
          mv ${{ steps.scan.outputs.crda_report_sarif }} uploads

      - name: Upload merged Results
        uses: actions/upload-artifact@v2
        with:
          name: workfiles_go
          path: ./uploads
