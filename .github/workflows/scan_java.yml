name: Scan Java project
on:
  push:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'  # every day at midnight

env:
  PROJECT_DIR: spring-petclinic

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ "macos-latest", "windows-latest", "ubuntu-20.04" ]
        # Test once with explicit manifest_file, and once without
        manifest_file: [ "pom.xml", "" ]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    name: Analyse Java project
    steps:
      - name: Checkout action
        uses: actions/checkout@v2

      - name: Clone ${{ env.PROJECT_DIR }}
        run: |
          git clone --single-branch --branch crda-modification --depth 1 https://github.com/redhat-actions/${{ env.PROJECT_DIR }}.git

      # pom.xml must be in working directory when setup-java is run
      - name: Copy pom.xml to working directory
        run: cp ${{ env.PROJECT_DIR }}/pom.xml .

      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: 11
          cache: maven

      - name: Install CRDA
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          source: github
          github_pat: ${{ github.token }}
          crda: "0.2.3"

      - name: CRDA Scan
        id: scan
        uses: ./
        with:
          manifest_directory: ${{ env.PROJECT_DIR }}
          manifest_file: ${{ matrix.manifest_file }}
          crda_key: ${{ secrets.CRDA_KEY }}
          # snyk_token: ${{ secrets.SNYK_TOKEN }}
          analysis_report_name: java
          fail_on: never

      - name: Print JSON analysis report
        if: ${{ always() && steps.scan.outputs.crda_report_json }}
        run: cat ${{ steps.scan.outputs.crda_report_json }}

      - name: Print SARIF analysis report
        if: ${{ always() && steps.scan.outputs.crda_report_sarif }}
        run: cat ${{ steps.scan.outputs.crda_report_sarif }}

      - name: Print Report Link
        run: echo ${{ steps.scan.outputs.report_link }}

      - name: Save intermediate files
        run: |
          mkdir -p uploads
          mv ${{ steps.scan.outputs.crda_report_json }} uploads
          mv ${{ steps.scan.outputs.crda_report_sarif }} uploads

      - name: Upload merged Results
        uses: actions/upload-artifact@v2
        with:
          name: scan_result_java.zip
          path: ./uploads
